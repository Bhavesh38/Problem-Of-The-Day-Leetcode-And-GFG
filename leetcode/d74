/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    private:
    int count(TreeNode* root)
    {
        if(root==NULL)
        {
            return 0;
        }
        int ans=1 + count(root->left) + count(root->right);
        return ans;
    }
    bool solve(TreeNode* root,int index,int cnt)
    {
        if(root==NULL)
        {
            return true;
        }
        if(index>=cnt)
        {
            return false;
        }
        return solve(root->left,2*index+1,cnt) && solve(root->right,2*index+2,cnt);
    }
public:
    bool isCompleteTree(TreeNode* root) {
        int cnt=count(root);
        return solve(root,0,cnt);
    }
};